void setup() {
  size(640,360);
}

void draw() {
  FFR_31(320, 180, 10);
  AAM_3(360, 240 ,10);
}

void FFR_31(int x, int y, float s) {
  noStroke();
  fill(51, 60, 94);
  triangle(x, y, x+s, y, x, y-9*s);
  triangle(x, y, x-s, y, x, y-9*s);
  quad(x, y, x+1.5*s, y, x+1.5*s, y-s, x, y-2*s);
  quad(x, y, x-1.5*s, y, x-1.5*s, y-s, x, y-2*s);
  quad(x, y-3*s, x+2*s, y-1.6*s, x+2*s, y-1.2*s, x, y-2*s);
  quad(x, y-3*s, x-2*s, y-1.6*s, x-2*s, y-1.2*s, x, y-2*s);
  quad(x, y-1.7*s, x+5*s, y+4*s, x+5*s, y+5*s, x, y+3*s);
  quad(x, y-1.7*s, x-5*s, y+4*s, x-5*s, y+5*s, x, y+3*s);
  quad(x, y+3*s, x+5*s, y+5*s, x+4*s, y+6*s, x, y+5*s);
  quad(x, y+3*s, x-5*s, y+5*s, x-4*s, y+6*s, x, y+5*s);
  quad(x+3*s, y+5*s, x+2.5*s, y+7.5*s, x+1.6*s, y+7.5*s, x+s, y+5*s);
  quad(x-3*s, y+5*s, x-2.5*s, y+7.5*s, x-1.6*s, y+7.5*s, x-s, y+5*s);
  triangle(x, y, x+s, y, x, y+9*s);
  triangle(x, y, x-s, y, x, y+9*s);
}

void AAM_3(int x, int y, float s){
  noStroke();
  fill(134, 137, 195);
  quad(x, y, x, y-5*s, x+s/4, y-4.5*s, x+s/4, y);
  quad(x, y, x, y-5*s, x-s/4, y-4.5*s, x-s/4, y);
}
